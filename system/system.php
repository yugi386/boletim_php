<?php/*|===========================================================================||	CLASSE DE CONTROLE GERAL DO SISTEMA										||===========================================================================||																			||	VERSÃO:								1.0.0								||	DATA DE INÍCIO DO PROJETO: 			09/03/2012 							||	DATA DA ÚLTIMA ATUALIZAÇÃO: 		30/03/2012							||	 																		|	|===========================================================================|*/	Class System {		private $_url;			//	ESTA VARIAVEL PEGA A URL DO NAVEGADOR		private $_explode;		//	SEPARA A URL EM [PACOTES] - [CONTROLADORES] - [ACOES] - [PARAMETROS]		public  $_package;		//	GUARDA O PACOTE PASSADO PELO USUARIO		public  $_controller;	//	GUARDA O CONTROLADOR PASSADO PELO USUARIO		public  $_action;		//	GUARDA A AÇÃO PASSADA PELO USUARIO			public  $_params;		//	GUARDA OS PARAMETROS PASSADOS PELO USUARIO		# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 001: [ PUBLIC FUNCTION __CONSTRUCT ]	# ESTE METODO É RESPONSÁVEL POR EXECUTAR OUTROS MÉTODOS DESTA CLASSE AO INSTANCIARMOS A MESMA.	# ---------------------------------------------------------------------------------------------------------------------------------		public function __construct() {		//	O CONSTRUTOR EXECUTA AUTOMATICAMENTE AO SE INSTANCIAR A CLASSE.			$this->setUrl();			$this->setExplode();			$this->setPackage();						$this->setController();			$this->setAction();			$this->setParams();		}	# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 002: [ PUBLIC FUNCTION SETURL ]	# ESTE METODO LÊ A URL DO NAVEGADOR E ATRIBUI O CONTEUDO A VARIAVEL $_url	# ---------------------------------------------------------------------------------------------------------------------------------		private function setUrl() {			$_GET['url'] = (isset($_GET['url']) ? $_GET['url'] : 'master/index/index_action'); 			$this->_url = $_GET['url'];		}	# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 003: [ PUBLIC FUNCTION SETEXPLODE ]	# ESTE METODO DIVIDE A URL EM [PACOTE] [CONTROLADOR] [ACAO] [PARAMETROS] E ARMAZENA EM $_explode	# ---------------------------------------------------------------------------------------------------------------------------------		private function setExplode() {			$this->_explode = explode('/',$this->_url);		}	# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 004: [ PUBLIC FUNCTION SETPACKAGE ]	# ESTE METODO IDENTIFICA O PACOTE QUE SERÁ USADO E O COLOCA EM $_explode[0]	# ---------------------------------------------------------------------------------------------------------------------------------		private function setPackage() {			$this->_package = $this->_explode[0];		}			# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 005: [ PUBLIC FUNCTION SETCONTROLLER ]	# ESTE METODO IDENTIFICA O CONTROLADOR QUE SERÁ CHAMADO E O COLOCA EM $_explode[1]	# ---------------------------------------------------------------------------------------------------------------------------------		private function setController() {			$control = (!isset($this->_explode[1]) || $this->_explode[1] == null ? 'index' : $this->_explode[1]);					$this->_controller = $control;		}	# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 006: [ PUBLIC FUNCTION SETACTION ]	# ESTE METODO IDENTIFICA A ACAO QUE SERÁ CHAMADA E A COLOCA EM $_explode[2]	# ---------------------------------------------------------------------------------------------------------------------------------		private function setAction() {			$ac = (!isset($this->_explode[2]) || $this->_explode[2] == null || $this->_explode[2] == 'index' ? 'index_action' : $this->_explode[2]);			$this->_action = $ac;		}	# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 007: [ PUBLIC FUNCTION SETPARAMS ]	# ESTE METODO IDENTIFICA PEGA TODOS OS PARAMETROS E OS ARMAZENA NA VARIAVEL $_params	# ---------------------------------------------------------------------------------------------------------------------------------		public function setParams() {			unset($this->_explode[0], $this->_explode[1], $this->_explode[2]);		//	RETIRA REFERENCIAS DE PACOTES - CONTROLADORES - ACOES						if ( end($this->_explode) == null) {				array_pop($this->_explode);			//	DELETA O ULTIMO INDICE DO ARRAY SE ELE ESTIVER VAZIO...			}						$i = 0;						if (!empty($this->_explode)) {			//	GUARDA INDICES E PARAMETROS NOS VETORES AUXILIARES $IND E $VAL				foreach($this->_explode as $val) {					// echo $val."<br>";					if ($i % 2 == 0 ) {						$ind[] = $val;					} else {						$value[] = $val;					}					$i++;				}			} else {				$ind = array();				$value = array();			}						if (count($ind) == count($value) && !empty($ind) && !empty($value))				$this->_params = array_combine($ind,$value);					//	COMBINA IDENTIFICADORES E PARAMETROS NUM MESMO ARRAY			else				$this->_params = array();		}	# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 008: [ PUBLIC FUNCTION GETPARAMS ]	# ESTE METODO IDENTIFICA RETORNA UM PARAMETRO ESPECIFICO DADO PELO USUARIO	# ---------------------------------------------------------------------------------------------------------------------------------		public function getParam($name = null) {			if ($name != null) 				if (array_key_exists($name, $this->_params))					return $this->_params[$name]; 				else					return false;			else				return $this->_params;		}	# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 009: [ PUBLIC FUNCTION RUN ]	# ESTE METODO VERIFICA A EXISTENCIA DO [PACOTE][CONTROLADOR][ACAO] E FAZ A EXECUCAO.	# ---------------------------------------------------------------------------------------------------------------------------------		public function run() {			$controller_path = FW_CONTROLLERS . $this->_controller . "Controller.php";			if ( !file_exists($controller_path)) {				// echo $controller_path;				die('HOUVE UM ERRO: O CONTROLADOR NÃO FOI ENCONTRADO!!!');				exit();			}			require_once($controller_path);			$app = new $this->_controller();						$action = $this->_action;			if (!method_exists($app,$action)) {				die('HOUVE UM ERRO: A AÇÃO NÃO FOI ENCONTRADA!!!');				exit();			}						# ABAIXO VEMOS A INICIALIZAÇÃO DO SISTEMA PROPRIAMENTE DITA:						$app->init(); 		//	CHAMA O MÉTODO INIT QUE SERÁ EXECUTADO ANTES DE QUALQUER ACTION...			$app->$action(); 	//  CHAMA UMA AÇÃO NO CONTROLADOR			$app->finalize(); 	//	CHAMA O MÉTODO FINALIZE QUE SERÁ EXECUTADO DEPOIS DE QUALQUER ACTION...					}		# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 010: [ PUBLIC FUNCTION NOSQLINJECT ]	# ESTE METODO FILTRA AS ENTRADAS DOS FORMULARIOS PARA EVITAR SQL INJECTION	# ---------------------------------------------------------------------------------------------------------------------------------		// funcao está ficando incompativel com php				public function NoSqlInject($str) {				$str = trim($str);				/*					if (!is_numeric($str)) {					$str = get_magic_quotes_gpc() ? stripslashes($str) : $str;					$str = function_exists('mysql_real_escape_string') ? mysql_real_escape_string($str) : mysql_escape_string($str);				}				*/				return $str;		}		# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 011: [ PUBLIC FUNCTION NOBLOCKS ]	# ESTE METODO IMPEDE A EXECUÇÃO DE BLOCOS DIRETAMENTE.	# ---------------------------------------------------------------------------------------------------------------------------------		public function NoBlocks() {				global $fw_blocks;				if ($fw_blocks == "qazwsxedc") {					return true;				} else {						return false;					}		}	# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 012: [ PUBLIC FUNCTION EXCLUIRCAMPO ]	# ESTE METODO EXCLUI UM OU MAIS CAMPOS DE UM VETOR (USADO NA FUNÇÃO DE CONSULTA OU EXCLUSÃO)	# PARAMETROS: 	$VET   = MATRIZ COM OS CAMPOS E CABEÇALHOS	# PARAMETROS: $EXCLUIR = ARRAY COM AS CAMPOS A EXCLUIR.	# ---------------------------------------------------------------------------------------------------------------------------------		public function ExcluirCampo($vet,$excluir) {			$limit1 = count($vet);			$limit2 = count($excluir);			$vetCab = array_keys($vet);			$vetVal = array_values($vet);						for ($ct=0;$ct<$limit1;$ct++) {				for ($ct2=0;$ct2<$limit2;$ct2++) {					if ($excluir[$ct2] == $vetVal[$ct]) {						unset($vet[$vetCab[$ct]]);					}				}			}						return $vet;		}	# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 013: [ PUBLIC FUNCTION INCLUIRCAMPO ]	# ESTE METODO EXCLUI UM OU MAIS CAMPOS NUM FORMULARIO	# PARAMETROS: 	$VET   = MATRIZ COM OS CAMPOS DO FORMULARIO	#				$incluir = MATRIZ COM OS CAMPOS A INCLUIR	# ---------------------------------------------------------------------------------------------------------------------------------		public function IncluirCampo($vet,$incluir) {			$limit = count($incluir);			$IncCab = array_keys($incluir);			$IncVal = array_values($incluir);						for ($ct=0;$ct<$limit;$ct++) {				$vet[$IncCab[$ct]] = $IncVal[$ct];			}			return $vet;		}			}	//	FIM DA CLASSE ---------------------------------------------------------------------------------------------------------?>