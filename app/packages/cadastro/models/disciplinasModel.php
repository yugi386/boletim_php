<?php/*|===========================================================================||	MODELO DE DADOS PARA A TABELA           						        ||===========================================================================||																			||	VERSÃO:								1.0.0								||	 																		|	|===========================================================================|*/	Class disciplinasModel extends Model {		public $_tabela = "disciplinas";	//	ATRIBUTO PARA SETAR QUAL A TABELA QUE ESTÁ EM USO			# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 001: [ PUBLIC FUNCTION LISTA REGISTROS ]	# ESTE METODO É RETORNA TODOS OS REGISTROS DO BANCO DE DADOS	# ---------------------------------------------------------------------------------------------------------------------------------				public function listadisciplinas($condicao = null, $qtd = null, $offset = null, $ordem = 'disciplina ASC') {			return $this->read($condicao, $qtd, $offset, $ordem);		}			# ---------------------------------------------------------------------------------------------------------------------------------	# METODO 002: [ PUBLIC FUNCTION MOSTRA REGISTRO ]	# ESTE METODO RETORNA UM ÚNICO REGISTRO	# ---------------------------------------------------------------------------------------------------------------------------------						public function disciplinasShow($where) {			return $this->read($where, null, null, 'disciplina ASC');		}	# ---------------------------------------------------------------------------------------------------------------------------------		# METODO DE VALIDACAO DE DADOS: parametro formulairo	# ---------------------------------------------------------------------------------------------------------------------------------			public function ValidaDados($form,$campos) {			global $start;						// criando as sessoes para recuperar os dados do usuario:			for ($ct=0;$ct<count($campos);$ct++){			// EVITANDO SQL_INJECTION:				if (isset($_POST[$campos[$ct]]) ) {					$_POST[$campos[$ct]] = $start->NoSqlInject($_POST[$campos[$ct]]);				}				$_SESSION[$campos[$ct]] = (isset($_POST[$campos[$ct]]) ? $_POST[$campos[$ct]] : "");			}				$_SESSION['posic_erro'] = 0;	//	PONTEIRO PARA GERENCIAR VALIDACOES...						// VALIDACAO NOME - MINIMO 3 MÁXIMO 70.			$this->VerErro( $this->ValidarStringMinimoMaximo('nome da disciplinas', $_POST['disciplina'], 3, 50, null, null) );						// VALIDACAO resumo - MINIMO 20 MÁXIMO 400.			$this->VerErro( $this->ValidarStringMinimoMaximo('resumo', $_POST['resumo'], 20, 400, null, null) );						if ( isset($_SESSION["ERRO0"]) ) {	//	se existe ao menos um erro...				return array('1');	//	retorna o vetor de erros...					} else {				return array();		//	retorna o vetor de erros VAZIO								}			}			}	//	final da classe	?>